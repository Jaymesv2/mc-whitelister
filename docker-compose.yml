version: '3.9'

#networks:

services:
#  app:
#    build: .
#    ports:
#      - 8080:8080
#    env_file:
#      - .env
#    environment:
#      DB_HOST: db
#      REDIS_HOST: redis
#
#    depends_on:
#      - db


  db:
    image: mysql:latest
    environment:
      # Should be the same as in .env file
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - 3306:3306
    volumes:
      - ./deps/data/db/:/var/lib/mysql/
    user: "1000:1000"
  
  # for debugging the db
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8081:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    depends_on:
      - db

  redis:
    image: redis:alpine
    ports:
      - 6379:6379

  # for debugging redis
  insight:
    image: redislabs/redisinsight:latest
    ports:
      - 8001:8001
    depends_on:
    - redis

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph
      - GF_DIAGNOSTICS_PROFILING_ENABLED=true
      - GF_DIAGNOSTICS_PROFILING_ADDR=0.0.0.0
      - GF_DIAGNOSTICS_PROFILING_PORT=6060
    ports:
      - "3000:3000"
    volumes:
    - ./deps/config/grafana/provisioning:/etc/grafana/provisioning:ro


  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./deps/config/tempo.yaml:/etc/tempo.yaml:ro
      - ./deps/data/tempo:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "9411:9411"   # zipkin

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./deps/config/prometheus.yaml:/etc/prometheus.yaml:ro
    ports:
      - "9090:9090"

  phlare:
    image: grafana/phlare:latest
    ports:
      - "4100:4100"
    command: -config.file=/etc/phlare/config.yaml
    volumes:
      - ./deps/config/phlare.yaml:/etc/phlare/config.yaml
      - ./deps/data/phlare/:/data
    user: '1000:1000'

  #promtail:
  #  image: grafana/promtail:2.8.0
  #  volumes:
  #    - ./deps/config/promtail:/etc/promtail:ro
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - ./deps/data/promtail:/promtail
  #  command: -config.file=/etc/promtail/config.yaml

  otel-collector: 
    image: otel/opentelemetry-collector-contrib:0.79.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    ports:
    - 4317:4317
    - 4318:4318
    volumes:
      - ./deps/config/otel-collector.yaml:/etc/otel-collector.yaml:ro
